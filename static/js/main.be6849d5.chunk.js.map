{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortBy","GoodsList","goods","className","map","good","goodsFromServer","App","state","started","visibleGoods","start","setState","reverse","reset","sort","sortType","current","next","alphabetical","localeCompare","length","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFCJUC,EAVoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjC,oBAAIC,UAAU,aAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,kBAAzB,SACGE,GADMA,SDFTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,K,mBAAAA,E,iBAAAA,M,SAWCO,E,4MACJC,MAAQ,CACNC,SAAS,EACTP,MAAOI,EACPI,aAAcJ,G,EAGhBK,MAAQ,WACN,EAAKC,SAAS,CAAEH,SAAS,K,EAG3BI,QAAU,WACR,EAAKD,UACH,SAAAJ,GAAK,MAAK,CAAEE,aAAc,YAAIF,EAAME,cAAcG,e,EAItDC,MAAQ,WACN,EAAKF,UACH,SAAAJ,GAAK,MAAK,CAAEE,aAAcF,EAAMN,W,EAIpCa,KAAO,SAACC,GACN,EAAKJ,UACH,SAAAJ,GAAK,MAAK,CACRE,aAAc,YAAIF,EAAMN,OAAOa,MAAK,SAACE,EAASC,GAC5C,OAAQF,GACN,KAAKhB,EAAOmB,aACV,OAAOF,EAAQG,cAAcF,GAC/B,KAAKlB,EAAOqB,OACV,OAAOJ,EAAQI,OAASH,EAAKG,OAC/B,QAAS,OAAO,W,4CAO1B,WAAU,IAAD,OACP,EAAyCC,KAAKd,MAAtCN,EAAR,EAAQA,MAAOQ,EAAf,EAAeA,aAAcD,EAA7B,EAA6BA,QAE7B,OACE,sBAAKN,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,oBACEA,UAAU,2BADZ,oBAOGM,GACD,wBACEc,KAAK,SACLpB,UAAU,oBACVqB,QAASF,KAAKX,MAHhB,sBASFF,GACA,qCACE,cAAC,EAAD,CACEP,MAAOQ,IAET,wBACEa,KAAK,SACLpB,UAAU,oBACVqB,QAASF,KAAKT,QAHhB,qBAOA,wBACEU,KAAK,SACLpB,UAAU,oBACVqB,QAAS,kBAAM,EAAKT,KAAKf,EAAOmB,eAHlC,iCAOA,wBACEI,KAAK,SACLpB,UAAU,oBACVqB,QAAS,kBAAM,EAAKT,KAAKf,EAAOqB,SAHlC,4BAOCnB,IAAUQ,GACT,wBACEa,KAAK,SACLpB,UAAU,mBACVqB,QAASF,KAAKR,MAHhB,6B,GAzFIW,IAAMC,WAwGTnB,IEjIfoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.be6849d5.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport GoodsList from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  alphabetical = 'abc',\n  length = 'length',\n}\n\ntype State = {\n  started: boolean;\n  goods: string[];\n  visibleGoods: string[]\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    started: false,\n    goods: goodsFromServer,\n    visibleGoods: goodsFromServer,\n  };\n\n  start = () => {\n    this.setState({ started: true });\n  };\n\n  reverse = () => {\n    this.setState(\n      state => ({ visibleGoods: [...state.visibleGoods].reverse() }),\n    );\n  };\n\n  reset = () => {\n    this.setState(\n      state => ({ visibleGoods: state.goods }),\n    );\n  };\n\n  sort = (sortType: SortBy) => {\n    this.setState(\n      state => ({\n        visibleGoods: [...state.goods].sort((current, next) => {\n          switch (sortType) {\n            case SortBy.alphabetical:\n              return current.localeCompare(next);\n            case SortBy.length:\n              return current.length - next.length;\n            default: return 0;\n          }\n        }),\n      }),\n    );\n  };\n\n  render() {\n    const { goods, visibleGoods, started } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"level\">\n          <h1\n            className=\"\n              title\n              has-text-centered\"\n          >\n            Goods\n          </h1>\n          { !started && (\n            <button\n              type=\"button\"\n              className=\"button is-success\"\n              onClick={this.start}\n            >\n              Start\n            </button>\n          )}\n        </div>\n        { started && (\n          <>\n            <GoodsList\n              goods={visibleGoods}\n            />\n            <button\n              type=\"button\"\n              className=\"button is-success\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              className=\"button is-success\"\n              onClick={() => this.sort(SortBy.alphabetical)}\n            >\n              Sort Alphabetically\n            </button>\n            <button\n              type=\"button\"\n              className=\"button is-success\"\n              onClick={() => this.sort(SortBy.length)}\n            >\n              Sort by length\n            </button>\n            {goods !== visibleGoods && (\n              <button\n                type=\"button\"\n                className=\"button is-danger\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Props } from '../types/GoodsListProps';\n\nconst GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"goods-list\">\n    {goods.map(good => (\n      <li key={good} className=\"goods-list-item\">\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nexport default GoodsList;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}